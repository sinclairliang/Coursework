.ORIG X3000
AND R0,R0,0
AND R1,R1,0
AND R2,R2,0 ;MOSTLY USED FOR COMPARISIONS
AND R3,R3,0 ;FLAG
AND R4,R4,0 ;MOSTLY USED AS COUNTERS
AND R5,R5,0
AND R6,R6,0 ;STORE VALUE


LEA R0,WELCOME
PUTS ; WELCOME MESSAGE

DISPLAY; Initiated all registers again to store new values
AND R0,R0,0
AND R1,R1,0
AND R2,R2,0 ;MOSTLY USED FOR COMPARISIONS
AND R3,R3,0 ;FLAG
AND R4,R4,0 ;MOSTLY USED AS COUNTERS
AND R5,R5,0
AND R6,R6,0 ;STORE VALUE
LEA R0,PROMT
PUTS ;WAIT FOR USERS' INPUT

GETUSERCHAR ;GET USER INPUT AND CHECK WHETHER IT IS -
GETC
OUT
LD R1,NEGATIVE
ADD R2,R1,R0 ;if it is -
BRZ SETFLAG ;GO TO SET FLAG == 1

LD R1,AX ;CHECK WHETHER IT IS X
AND R2,R2,0
ADD R2,R1,R0 ;if it is X
BRZ EXIT ;START EXITING PROCEDURES

LD R1,BACKSPACE ;CHECK WHETHER IT IS BACKSPACE
AND R2,R2,0
ADD R2,R1,R0 ;if it is BACKSPACE
BRZ TWOSCOMP ;GO TO TWOS COMPLETEMENT AND START CONVERSION

PROCESS
AND R2,R2,0
LD R2,ZERO ;IN ORDER TO MINUS ASCII OF 0
ADD R0,R0,R2 ;R0 HAS THE DECIMAL
JSR MULTI ;JMPR TO SUBROUTINE TO MUTIPLY NUMBERS BY 10
ADD R6,R0,R6 ;STORE THE VALUE IN R6
BR GETUSERCHAR ;PROMPT USER AGAIN


MULTI
AND R5,R5,0
ADD R5,R6,#0 ;COPY THE VALUE STORE IN R6, THE DECIMAL VALUE
AND R4,R4,0
ADD R4,R4,-9 ;COUNTER
COUNT 
BRZ RETURN ;IF R4 == 0, RETURN
ADD R6,R6,R5 ;ADD TO ITSELF FOR 10 TIMES IN THIS LOOP
ADD R4,R4,#1 ;INCREMENT THE COUNTER
BR COUNT
RETURN RET

TWOSCOMP
LEA R0,THANKU
PUTS ; THANKS MESSAGE
AND R2,R2,0 ;TO CHECK NEG_FLAG
ADD R2,R2,#-1
ADD R2,R3,R2;0==NEGATIVE,-1==POSITIVE
BRN BINARYCONVERSION;IF FLAG IS NOT ON, SKIP THE NOT PART
NOT R6,R6
ADD R6,R6,#1
BINARYCONVERSION
AND R4,R4,0;R4 IS COUNTER
AND R3,R3,0
ADD R4,R4,#-16;LOAD 16 LOOPS
AND R5,R5,0;POINTER
LEA R5,MASK;R5 STORES THE ADDRESS OF MASKS
LDR R3,R5,0; PUT THE VALUE TO R3
LOOP
LDR R3,R5,0;PUT THE VALUE TO R3
ADD R5,R5,#1;INCREMENT THE ADDRESS
AND R0,R0,#0;CLEAR R0 FOR COMPARISON
ADD R0,R0,R6;COPY THE VALUE FROM R6 TO R0
AND R0,R3,R6;AND THE VALUE AND THE MASK
BRnp PLUS; IF THE RESULT IS NOT ZERO, PRINT ONE
AND R0,R0,0;CLEAR R0 AGAIN FOR PRINTING

BREAKPOINT
ADD R0,R0,#12
ADD R0,R0,#12
ADD R0,R0,#12
ADD R0,R0,#12;ADD 48 ASCII VALUE TO THE ACTUAL NUMBER IN ORDER TO PRINT
OUT
ADD R4,R4,#1;INCREMENT THE COUNTER
BRZ DONE;IF WE HAVE DONE 16 LOOPS, GO TO DONE
BR LOOP;IF NOT DONE, GO BACK TO BITMASKING
DONE BR DISPLAY;GO BACK TO PROMPT USER AGAIN, CLAERING ALL REGISTERS

SETFLAG
AND R3,R3,0
ADD R3,R3,1
BR GETUSERCHAR;PROMPT USER AGAIN

PLUS;ADD EXTRA ONE TO R0 IN ORDER TO PRINT 1S
AND R0,R0,0
ADD R0,R0,1
BR BREAKPOINT

EXIT; THE END OF PROGRAMME
LEA R0,GOODBYE
PUTS
HALT

WELCOME .STRINGZ "Welcome to the conversion programme"
PROMT .STRINGZ "\nEnter a decimal number or X to quit: \n>"
THANKU .STRINGZ "Danke! Thanks, here it is in binary \n"
GOODBYE .STRINGZ "\nAuf Wiedersehen. Have a great day.\n"

AX .FILL #-88
NEGATIVE .FILL #-45
ZERO .FILL #-48
ZERO1 .FILL #48
BACKSPACE .FILL #-10
MASK
		.FILL	b1000000000000000
		.FILL	b0100000000000000
		.FILL	b0010000000000000
		.FILL	b0001000000000000
		.FILL	b0000100000000000
		.FILL	b0000010000000000
		.FILL	b0000001000000000
		.FILL	b0000000100000000
		.FILL	b0000000010000000
		.FILL	b0000000001000000
		.FILL	b0000000000100000
		.FILL	b0000000000010000
		.FILL	b0000000000001000
		.FILL	b0000000000000100
		.FILL	b0000000000000010
		.FILL	b0000000000000001
.END